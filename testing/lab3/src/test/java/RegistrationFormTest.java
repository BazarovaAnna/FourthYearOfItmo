// Generated by Selenium IDE

import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class RegistrationFormTest {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;


    @Before
    public void setUp() {
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
        System.setProperty("webdriver.chrome.driver", "/usr/bin/chromedriver");
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void registrationForm() {
        driver.get("https://dfiles.eu/");
        driver.manage().window().setSize(new Dimension(960, 1053));
        driver.findElement(By.linkText("Зарегистрируйтесь сейчас!")).click();
        driver.findElement(By.id("i_undertake_conditions")).click();
        driver.findElement(By.id("signup_login")).click();
        driver.findElement(By.id("signup_login")).sendKeys("123");
        driver.findElement(By.cssSelector("#signup_frm tr:nth-child(3) > td")).click();
        driver.findElement(By.id("password")).click();
        driver.findElement(By.id("password")).sendKeys("123");
        driver.findElement(By.id("re_password")).click();
        driver.findElement(By.id("re_password")).sendKeys("123");
        driver.findElement(By.id("signup_email")).click();
        driver.findElement(By.id("signup_email")).sendKeys("123");
        driver.findElement(By.id("signup_nickname")).click();
        driver.findElement(By.id("signup_nickname")).sendKeys("123");
        assertThat(driver.findElement(By.cssSelector(".err_message:nth-child(2)")).getText(), is("Вероятно, введен неправильный адрес электронной почты"));
        driver.findElement(By.id("is_mail_send_enabled")).click();
        driver.findElement(By.id("i_undertake_conditions2")).click();
        driver.findElement(By.id("i_undertake_conditions")).click();
        driver.findElement(By.id("regin_btn")).click();
        driver.findElement(By.cssSelector("#signup_frm tr:nth-child(7) > td")).click();
        driver.findElement(By.id("signup_email")).click();
        driver.findElement(By.id("signup_email")).sendKeys("123@example.com");
        driver.findElement(By.cssSelector("#signup_frm tbody")).click();
        driver.findElement(By.id("regin_btn")).click();
        {
            WebElement element = driver.findElement(By.linkText("Пользовательское соглашение"));
            Actions builder = new Actions(driver);
            builder.moveToElement(element).perform();
        }
        {
            List<WebElement> elements = driver.findElements(By.xpath("//form[@id=\'signup_frm\']/table/tbody/tr[3]/td/div"));
            assert(elements.size() > 0);
        }
    }
}